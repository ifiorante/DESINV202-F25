/*
This code uses a Potentiometer to control an RGB Led.
If the meter is in the first third of a rotation, it controls the brightness
of red, the second third green and the last third blue.

*/

int sensorPin = A0;    // select the input pin for the potentiometer
int sensorValue = 0;  // variable to store the value coming from the sensor

int brightness = 0;    // how bright the LED is
int redBrightness = 0;
int greenBrightness = 0;
int blueBrightness = 0;
  
const int redLEDPin = 9;     // LED connected to pin 9
const int greenLEDPin = 10;  // LED connected to pin 10
const int blueLEDPin = 11;    // LED connected to pin 11

void setup() {
  // initialize serial communications at 9600 bps:
  Serial.begin(9600); 
  // set the digital pins as outputs
  pinMode(greenLEDPin,OUTPUT);
  pinMode(redLEDPin,OUTPUT);
  pinMode(blueLEDPin,OUTPUT);

}

void loop() {
  // read the value from the sensor:
  sensorValue = analogRead(sensorPin);
  
   if (sensorValue <= 340) {
    analogWrite(greenLEDPin, 0);
    analogWrite(blueLEDPin, 0); 
    //sensor value ranges from 0 to 340, but it must map to an integer
    //between 0 and 255 in order to be used as a level for LED brightness
    //therefore multiplying the sensor value by 0.75 ensures the resulting
    //value falls within the 0 to 255 range.
    redBrightness = (sensorValue*0.75);
    analogWrite(redLEDPin, redBrightness);  ; 

  } else if (sensorValue > 340 && sensorValue <= 682) {
    analogWrite(redLEDPin, 0);
    analogWrite(blueLEDPin, 0); 
    greenBrightness = (sensorValue-341)*0.75;
    analogWrite(greenLEDPin, greenBrightness); 
  } else if (sensorValue > 683) {
    analogWrite(redLEDPin, 0);
    analogWrite(greenLEDPin, 0);
    blueBrightness = (sensorValue-683)*0.75;
    analogWrite(blueLEDPin, blueBrightness);
  }
}
